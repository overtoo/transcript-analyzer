{"version":3,"sources":["firebase.js","Player.js","data/raw.txt","Words.js","Sentences.js","data/deepl.txt","data/pinyin.txt","ScrollDemo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Player","url","autoPlay","seekTo","refreshAudio","loadAudio","setGetTime","useState","cleanCurrentTime","setCleanCurrentTime","Audio","audio","playing","setPlaying","time","setTime","useEffect","interval","setInterval","currentTime","clearInterval","play","pause","reload","addEventListener","removeEventListener","useAudio","seconds","hours","minutes","map","val","Math","floor","slice","join","display","Words","props","className","words","load","word","class","style","backgroundColor","color","onMouseDown","e","button","promoteTo","newArray","filter","item","newObject","Object","assign","promoteArray","setWords","demoteTo","demoteArray","promoteWord","Sentences","controlMusic","displayController","refresh","getTime","cardChange","rawText","parentLockTime","setLoadAudio","itemsRef","useRef","autoScroll","setAutoScroll","targetIndex","point","window","console","log","keyCode","handlePress","data","length","i","current","scrollIntoView","setData","sentences","setSentences","pageLoaded","setPageLoaded","pageLoaded2","setPageLoaded2","pageLoaded3","setPageLoaded3","a","citiesRef","collection","doc","set","rawEN","en","rawPY","py","raw","cn","episode","tempSentencesCN","split","tempSentencesEN","tempSentencesPY","dataTemp","push","index","parseInt","dataCopy2","accumulator","totalChars","sen","tw","position","freePosition","j","target","location","indexOf","card","onClick","targetSen","ref","el","item2","includes","ind","targetTime","gradStart","gradEnd","tempData","fixed","round","lockTime","ScrollDemo","App","random","timePosition","setTimePosition","setRawText","setRefreshAudio","vocabListJSON","vocabListJSON2","myWordsData","ankiAdd","manualAdd","senCN","setDisplayController","get","forEach","id","loadEpisode","timeToGo","preventDefault","querySelector","getSelection","newWord","toString","replace","newTarget","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c0156fe.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBWRZjPbE0egCI-ch6yuRwwUfVz1VvFy44\",\n  authDomain: \"text-analyzer-7ad51.firebaseapp.com\",\n  projectId: \"text-analyzer-7ad51\",\n  storageBucket: \"text-analyzer-7ad51.appspot.com\",\n  messagingSenderId: \"903119730099\",\n  appId: \"1:903119730099:web:a1cdac09020e707d4687c6\",\n};\n\nexport default firebase;\n\n// initialize our firebaseapp\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n// get the db\nconst db = firebaseApp.firestore();\n// access to the authentication things we need\nconst auth = firebase.auth();\nexport { db, auth };\n","import React, { useState, useEffect } from \"react\";\n\nconst useAudio = (url, autoPlay, seekTo, refreshAudio, loadAudio) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(autoPlay);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(audio.currentTime), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  // console.log(audio.currentTime);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n\n  // useEffect(\n  //   (seekTo) => {\n  //     reload();\n  //     alert(\"worked\");\n  //   },\n  //   [loadAudio]\n  // );\n\n  const reload = (time) => {\n    audio.pause();\n    // audio.load();\n    // console.log(audio.currentTime);\n    audio.currentTime = time;\n    audio.play();\n    // console.log(audio.currentTime + \" is now playing\");\n  };\n\n  useEffect(() => {\n    // console.log(refreshAudio + \" iss this chang\");\n    // console.log(\"SEEK TOO\");\n    reload(seekTo);\n    // alert(\"worked\");\n\n    audio.addEventListener(\"ended\", () => setPlaying(false));\n\n    return () => {\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\n    };\n  }, [playing, seekTo, refreshAudio, loadAudio]);\n\n  return [playing, toggle, reload, audio.currentTime, time];\n};\n\nconst Player = ({\n  url,\n  autoPlay,\n  seekTo,\n  refreshAudio,\n  loadAudio,\n  setGetTime,\n}) => {\n  const [cleanCurrentTime, setCleanCurrentTime] = useState(\"0: 00\");\n  const [playing, toggle, reload, currentTime, time] = useAudio(\n    url,\n    autoPlay,\n    seekTo,\n    refreshAudio,\n    loadAudio\n  );\n\n  function display(seconds) {\n    const format = (val) => `0${Math.floor(val)}`.slice(-2);\n    const hours = seconds / 3600;\n    const minutes = (seconds % 3600) / 60;\n    setGetTime(currentTime);\n\n    return [hours, minutes, seconds % 60].map(format).join(\":\");\n  }\n\n  useEffect(() => {\n    setCleanCurrentTime(display(currentTime));\n    setGetTime(currentTime);\n  }, [time]);\n\n  return (\n    <div>\n      {/* <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button> */}\n      {/* <button\n        onClick={() => {\n          reload(seekTo);\n        }}\n      >\n        {\"load\"}\n      </button> */}\n      {cleanCurrentTime} {\"  \"}\n      {/* {(Math.round(currentTime * 10) / 10).toFixed(1)} */}\n      {/* {Math.round(currentTime)} */}\n    </div>\n  );\n};\n\nexport default Player;\n","export default __webpack_public_path__ + \"static/media/raw.bdae9a8f.txt\";","import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./styles.css\";\n\n// import Cards from \"./components/Cards\";\n\n//<Words words={myWords.target} promote={myWords.learned} color=\"red\" />\n\nconst Words = (props) => {\n  const [blank, setBlank] = useState(false);\n\n  //   const [, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  //   useEffect(() => {\n  //     setBlank(!blank);\n  //     forceUpdate(); // force re-render\n  //   }, [props.words]);\n\n  function promoteWord(e, word) {\n    if (e.button == 0 && props.promoteTo) {\n      let oldArray = props.words[props.load];\n      let newArray = oldArray.filter((item) => item !== word);\n      // setTargetWords(targetWords.filter((item) => item !== word));\n      let newObject = {};\n      let target = Object.assign(newObject, props.words);\n      newObject[props.load] = newArray;\n      let promoteArray = props.words[props.promoteTo];\n      newObject[props.promoteTo] = [...promoteArray, word];\n      props.setWords(newObject);\n      // const temp = [...learnedWords];\n      // temp.push(word);\n      // setLearnedWords(temp);\n    } else if (e.button == 1 && props.demoteTo) {\n      let oldArray = props.words[props.load];\n      let newArray = oldArray.filter((item) => item !== word);\n      // setTargetWords(targetWords.filter((item) => item !== word));\n      let newObject = {};\n      let target = Object.assign(newObject, props.words);\n      newObject[props.load] = newArray;\n      let demoteArray = props.words[props.demoteTo];\n      newObject[props.demoteTo] = [...demoteArray, word];\n      props.setWords(newObject);\n    }\n  }\n\n  return (\n    <div className=\"words-wrapper\">\n      {/* {console.log(props.words)}\n      {console.log(\"loaddded\")} */}\n      {props.words[props.load].map((word) => {\n        return (\n          <span\n            class=\"bubble\"\n            style={{\n              backgroundColor: props.color,\n            }}\n            // onClick={(e) => promoteWord(e, word)}\n            onMouseDown={(e) => promoteWord(e, word)}\n          >\n            {word}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Words;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport rawChinese from \"./data/raw.txt\";\nimport deepL from \"./data/deepl.txt\";\nimport pinyin from \"./data/pinyin.txt\";\nimport { db } from \"./firebase\";\n\nimport \"./styles.css\";\n\nconst Sentences = ({\n  setWords,\n  words,\n  controlMusic,\n  refresh,\n  displayController,\n  cardChange,\n  getTime,\n  parentLockTime,\n  rawText,\n  setLoadAudio,\n}) => {\n  //refs thing\n  const itemsRef = useRef([]);\n  const [autoScroll, setAutoScroll] = useState(true);\n\n  const executeScroll = (point) => itemsRef.current[point].scrollIntoView();\n\n  function toggleScroll() {\n    if (displayController.card) {\n      setAutoScroll(!autoScroll);\n    }\n  }\n\n  function handleScroll() {\n    if (autoScroll) {\n      setAutoScroll(false);\n      console.log(\"scrolling\");\n    }\n  }\n\n  function handlePress(e) {\n    if (e.keyCode == 97) {\n      setAutoScroll(true);\n    }\n  }\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    window.addEventListener(\"wheel\", () => handleScroll());\n    window.addEventListener(\"keypress\", (e) => handlePress(e));\n    if (data.length > 2 && autoScroll) {\n      console.log(getTime);\n      let targetIndex;\n      data.map((item, i) => {\n        if (getTime > item.time) {\n          targetIndex = i;\n        }\n      });\n      console.log(targetIndex);\n      executeScroll(targetIndex - 1);\n    }\n  }, [getTime]);\n\n  const [data, setData] = useState([]);\n  const [preData, setPreData] = useState([]);\n  const [sentences, setSentences] = useState([]);\n  const [pageLoaded, setPageLoaded] = useState(false);\n  const [pageLoaded2, setPageLoaded2] = useState(false);\n  const [pageLoaded3, setPageLoaded3] = useState(false);\n\n  //   function lockTime(index) {\n  //     // alert(index);\n  //     // alert(\n  //     //   getTime + \" is forced onto current time: \" + data[index].lockPosition\n  //     // );\n  //     let tempData = [...data];\n  //     // alert(tempData[index].lockPosition);\n  //     tempData[index].lockPosition = getTime;\n  //     tempData[index].freePosition = getTime;\n  //     // setData(...data, (data[index].lockPosition = 5));\n  //   }\n\n  async function saveToCloud() {\n    // alert();\n    const citiesRef = db.collection(\"rawtranscripts\");\n    await citiesRef.doc(\"active\").set({\n      rawEN: rawText.en,\n      rawPY: rawText.py,\n      raw: rawText.cn,\n      data: data,\n      episode: rawText.episode,\n    });\n  }\n\n  function lockTime(ind, targetTime = getTime) {\n    console.log(data);\n    if (ind == \"0\") {\n      return;\n    }\n\n    let tempData = [...data];\n\n    const index = parseInt(ind);\n\n    let gradStart;\n    let gradEnd;\n    tempData[0].time = 0.1;\n    tempData[0].fixed = 0.1;\n    tempData[tempData.length - 1].time = 840;\n    tempData[tempData.length - 1].fixed = 840;\n\n    // alert(index);\n\n    tempData[index].fixed = targetTime;\n    // alert(targetTime);\n\n    tempData[index].time = targetTime;\n\n    for (let i = index + 1; i < tempData.length; i++) {\n      //   alert(i);\n      let sen = tempData[i];\n      if (sen.fixed) {\n        // sen.mark = \"**E\";\n        gradEnd = i;\n        break;\n      }\n    }\n\n    for (let i = index - 1; i < tempData.length; i--) {\n      let sen = tempData[i];\n      if (sen.fixed > -1) {\n        // sen.mark = \"**S\";\n        gradStart = i;\n        break;\n      }\n    }\n\n    for (let i = gradStart + 1; i < index; i++) {\n      tempData[i].time = Math.round(\n        ((tempData[gradStart].fixed +\n          ((i - gradStart) / (index - gradStart)) *\n            (tempData[index].fixed - tempData[gradStart].fixed)) *\n          10) /\n          10\n      );\n    }\n\n    for (let i = gradEnd - 1; i > index; i--) {\n      tempData[i].time = Math.round(\n        ((tempData[index].fixed +\n          ((i - index) / (gradEnd - index)) *\n            (tempData[gradEnd].fixed - tempData[index].fixed)) *\n          10) /\n          10\n      );\n    }\n\n    setData(tempData);\n    console.log(tempData);\n\n    // console.table(tempData);\n  }\n\n  useEffect(() => {\n    if (rawText.cn != \"unloaded\" && rawText.data) {\n      setData(rawText.data);\n      console.log(\"data from cloud has been loaded. Should only happen once.\");\n    } else if (rawText.cn != \"unloaded\" && !rawText.data) {\n      console.log(\n        \"raw data from cloud has loaded. NO TIMESTAMPS. should never happen unless raw.\"\n      );\n\n      setLoadAudio(true);\n      setPageLoaded(true);\n\n      let tempSentencesCN = rawText.cn\n        .split(\"。<><>\")\n        .join(\"||$END$\")\n        .split(\"。<>\")\n        .join(\"|$END$\")\n        .split(\"<><>\")\n        .join(\"||$END$\")\n        .split(\"<>\")\n        .join(\"|$END$\")\n        .split(\"。\")\n        .join(\"。$END$\")\n        .split(\"，\")\n        .join(\"，$END$\")\n        .split(\"$END$\")\n        .filter((item) => item);\n      let tempSentencesEN = rawText.en.split(\"<>\");\n      let tempSentencesPY = rawText.py.split(\"<>\");\n\n      setSentences([tempSentencesCN, tempSentencesEN, tempSentencesPY]);\n\n      let dataTemp = [];\n      for (let i in sentences[0]) {\n        dataTemp.push({\n          index: parseInt(i),\n          cn: sentences[0][i],\n          en: sentences[1][i],\n          py: sentences[2][i],\n          // en: sentencesEN[i],\n          // py: sentencesPY[i],\n        });\n      }\n      setData(dataTemp);\n\n      setWords(words);\n      if (pageLoaded2) {\n        setPageLoaded3(true);\n      }\n\n      //refs thing\n      itemsRef.current = itemsRef.current.slice(0, data.length);\n    }\n    // }, [words, refresh, pageLoaded, pageLoaded2, cardChange, rawText]);\n  }, [rawText]);\n\n  useEffect(() => {\n    const dataCopy2 = [...data];\n\n    let accumulator = 0;\n    let totalChars = 0;\n    const totalLengthSeconds = 840;\n    //find total characters in cn sentences\n    for (let i in dataCopy2) {\n      let sen = dataCopy2[i];\n      totalChars += sen.cn.length;\n    }\n    for (let i in dataCopy2) {\n      let sen = dataCopy2[i];\n      sen.tw = [];\n      sen.length = sen.cn.length;\n      sen.position = accumulator;\n      sen.freePosition = parseInt(\n        (accumulator / totalChars) * totalLengthSeconds\n      );\n      accumulator += sen.cn.length;\n    }\n    for (let i in dataCopy2) {\n      let sen = dataCopy2[i];\n      for (let j in words.target) {\n        let target = words.target[j];\n        let location = sen.cn.indexOf(target);\n        if (location > -1) {\n          if (!sen.tw) {\n            sen.tw = [];\n          }\n          sen.tw.push(location);\n          if (target.length > 1) {\n            sen.tw.push(location + 1);\n          }\n          if (target.length > 2) {\n            sen.tw.push(location + 2);\n          }\n          if (target.length > 3) {\n            sen.tw.push(location + 3);\n          }\n        }\n      }\n    }\n    // console.log(\"*********************************\");\n    setData(dataCopy2);\n    if (pageLoaded) {\n      setPageLoaded2(true);\n    }\n  }, [words, pageLoaded, pageLoaded3]);\n\n  //\n\n  return (\n    <div\n      className={`${\n        displayController.card ? \"cards-wrapper\" : \"nocards-wrapper\"\n      }`}\n    >\n      <div className=\"save-to-cloud\">\n        <button onClick={toggleScroll}>\n          {\" \"}\n          {autoScroll ? \"AUTOSCROLL: ON\" : \"AUTOSCROLL: OFF\"}{\" \"}\n        </button>\n\n        <button onClick={saveToCloud}>Save to Cloud</button>\n      </div>\n\n      {data.map((item, i) => {\n        if (item.tw == 0 && displayController.targetSen) {\n          return <div></div>;\n        } else\n          return (\n            <div\n              className={`${displayController.card ? \"card\" : \"nocard\"}`}\n              onClick={(e) => controlMusic(e, item.time)}\n              ref={(el) => (itemsRef.current[i] = el)}\n            >\n              <p className={`${displayController.card ? \"sn py\" : \"hide\"}`}>\n                {item.py}\n              </p>\n              <span className=\"off\">\n                {item.cn.split(\"\").map((item2, index) => {\n                  if (item.tw && true) {\n                    if (item.tw.includes(index)) {\n                      return <span className=\"sn cn hl\">{item2}</span>;\n                    } else {\n                      if (item2 == \"|\") {\n                        return (\n                          <span className=\"sn cn\">\n                            <br></br>\n                          </span>\n                        );\n                      }\n                      return <span className=\"sn cn\">{item2}</span>;\n                    }\n                  } else {\n                    return <span className=\"sn cn\">{item2}</span>;\n                  }\n                })}\n              </span>\n              <p className={`${displayController.card ? \"sn en\" : \"hide\"}`}>\n                {item.en}\n              </p>\n              {/* <p className=\"time3\">{parseInt(0 + item.position / 3.98)}</p> */}\n              <p className=\"time2 time\">{parseInt(item.time)}</p>\n              <p\n                className={`${\n                  displayController.card ? \"timeToDisplay\" : \"hide\"\n                }`}\n              >\n                {parseInt(item.time / 60)}:{parseInt(item.time % 60)}\n              </p>\n              <p\n                className={`${\n                  displayController.card ? \"timeToDisplay2\" : \"hide\"\n                }`}\n                onClick={() => {\n                  lockTime(item.index);\n                }}\n              >\n                {item.fixed\n                  ? \"refix (click to refix audio to this position)\"\n                  : \"fix (click to fix audio to this position)\"}\n              </p>\n              {/* <p\n                className={`${\n                  displayController.card ? \"timeToDisplay3\" : \"hide\"\n                }`}\n                onClick={() => {\n                  parentLockTime(item.index);\n                }}\n              >\n                {parseInt(item.freePosition / 60)}:\n                {parseInt(item.freePosition % 60)}\n              </p> */}\n            </div>\n          );\n      })}\n    </div>\n  );\n};\n\nexport default Sentences;\n","export default __webpack_public_path__ + \"static/media/deepl.8202a108.txt\";","export default __webpack_public_path__ + \"static/media/pinyin.4ce560de.txt\";","import React, { useRef } from \"react\";\n\nconst ScrollDemo = () => {\n  const myRef = useRef(null);\n\n  const executeScroll = () => myRef.current.scrollIntoView();\n  // run this function from an event handler or an effect to execute scroll\n\n  return <></>;\n};\n\nexport default ScrollDemo;\n","import React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\n// import Cards from \"./components/Cards\";\nimport vocabListJSON from \"./data/target.json\";\nimport vocabListJSON2 from \"./data/learned.json\";\nimport myWordsData from \"./data/myWords.json\";\nimport ankiJSON from \"./data/anki.json\";\nimport \"./styles.css\";\nimport InputBox from \"./InputBox\";\n// import raw from \"./data/formatted.json\";\nimport textFile from \"./data/raw.txt\";\nimport Player from \"./Player\";\nimport Words from \"./Words\";\nimport Sentences from \"./Sentences\";\nimport firebase from \"./firebase\";\nimport ScrollDemo from \"./ScrollDemo\";\n\nconst App = () => {\n  const [timePosition, setTimePosition] = useState(\n    Math.floor(Math.random() * 750)\n  );\n  // const [timePosition, setTimePosition] = useState(60);\n  const [getTime, setGetTime] = useState(0);\n\n  const [rawText, setRawText] = useState({ cn: \"unloaded\" });\n\n  const [refreshAudio, setRefreshAudio] = useState(0);\n  const [targetWords, setTargetWords] = useState(vocabListJSON);\n  // console.log(targetWords);\n  const [learnedWords, setLearnedWords] = useState(vocabListJSON2);\n  const [words, setWords] = useState(myWordsData);\n  const [ankiAdd, setAnkiAdd] = useState([]);\n  const [manualAdd, setManualAdd] = useState([]);\n\n  const [displayController, setDisplayController] = useState({\n    senCN: false,\n    targetSen: false,\n    card: true,\n  });\n  const [refresh, setRefresh] = useState(0);\n  const [loadAudio, setLoadAudio] = useState(false);\n\n  // Loads chat messages history and listens for upcoming ones.\n  async function loadEpisode(episode = \"46\") {\n    // await citiesRef.doc(\"SF\").set({\n    //   name: \"San Francisco\",\n    //   state: \"CA\",\n    //   country: \"USA\",\n    //   capital: false,\n    //   population: 860000,\n    // });\n\n    const citiesRef = db.collection(\"rawtranscripts\");\n    const snapshot = await citiesRef.get();\n    snapshot.forEach((doc) => {\n      if (doc.data().episode === episode) {\n        setRawText({\n          cn: doc.data().raw,\n          en: doc.data().rawEN,\n          py: doc.data().rawPY,\n          id: doc.id,\n          episode: doc.data().episode,\n          data: doc.data().data,\n        });\n      }\n    });\n  }\n\n  function parentLockTime(index) {\n    alert(index);\n    alert(getTime);\n  }\n\n  useEffect(() => {\n    loadEpisode();\n  }, []);\n\n  function selection() {\n    if (window.getSelection) {\n      // alert(window.getSelection());\n      const newWord = window.getSelection().toString().replace(/\\n/g, \"\");\n      if (newWord.length > 0) {\n        let newTarget = [...words.target];\n        newTarget.push(newWord);\n        setWords({ ...words, target: newTarget });\n      }\n      // console.log(newWord);\n    }\n  }\n  // fetch(textFile)\n  //   .then((r) => r.text())\n  //   .then((text) => {\n  //     let tempSentencesCN = text\n  //       .split(\"\\n\")\n  //       .join(\"$END$\")\n  //       .split(\"。\")\n  //       .join(\"。$END$\")\n  //       .split(\"，\")\n  //       .join(\"，$END$\")\n  //       .split(\"$END$\")\n  //       .filter((item) => item);\n  //     setSentencesCN(tempSentencesCN);\n  //   });\n\n  function loadData() {\n    setRefresh(refresh + 1);\n    // console.log(refresh);\n  }\n\n  function umOk() {\n    setDisplayController({\n      ...displayController,\n      targetSen: !displayController.targetSen,\n    });\n  }\n\n  function umOk2() {\n    setDisplayController({\n      ...displayController,\n      card: !displayController.card,\n    });\n  }\n\n  // useEffect(() => {\n  //   // alert(\"test\");\n  //   // console.log(sentencesCN);\n\n  //   async function fetchText() {\n  //     const response = await fetch(textFile);\n  //     const text = await response.text();\n  //     let tempSentencesCN = text\n  //       .split(\"\\n\")\n  //       .join(\"$END$\")\n  //       .split(\"。\")\n  //       .join(\"$END$\")\n  //       .split(\"，\")\n  //       .join(\"$END$\")\n  //       .split(\"$END$\")\n  //       .filter((item) => item);\n  //     setSentencesCN(tempSentencesCN);\n  //     // console.log(sentencesCN);\n\n  //     const response2 = await fetch(deepL);\n  //     const deepText = await response2.text();\n  //     let tempSentencesEN = deepText.split(\"\\n\");\n  //     setSentencesEN(tempSentencesEN);\n\n  //     const response3 = await fetch(pinyin);\n  //     const pinyinText = await response3.text();\n  //     let tempSentencesPY = pinyinText.split(\"<>\");\n  //     setSentencesPY(tempSentencesPY);\n\n  //     console.log(\"await function rendered\");\n  //   }\n\n  //   fetchText();\n\n  //   let dataTemp = [];\n  //   for (let i in sentencesCN) {\n  //     dataTemp.push({\n  //       index: i,\n  //       cn: sentencesCN[i],\n  //       en: sentencesEN[i],\n  //       py: sentencesPY[i],\n  //     });\n  //   }\n  //   setData(dataTemp);\n  //   console.log(dataTemp);\n\n  //   console.log(\"RENDERED\");\n  //   setTargetWords(removeAllBlanks(targetWords));\n  // }, [refresh]);\n\n  // const myArray = raw[0]\n  //   .split(\"\\n\")\n  //   .join(\"$END$\")\n  //   .split(\"，\")\n  //   .join(\"$END$\")\n  //   .split(\"。\")\n  //   .join(\"。$END$\")\n  //   .split(\"$END$\")\n  //   .filter((item) => item);\n\n  // const myArray2 = raw[1]\n  //   .split(\"\\n\")\n  //   .join(\"$END$\")\n  //   .split(\",\")\n  //   .join(\",$END$\")\n  //   .split(\".\")\n  //   .join(\".$END$\")\n  //   .split(\"$END$\")\n  //   .filter((item) => item);\n\n  // const myArray3 = raw[2].split(\"\\n\").filter((item) => item);\n\n  // const myArray4 = raw[3].split(\"\\n\").filter((item) => item);\n\n  // console.log(raw[0]);\n\n  // myArray.map((item) => dataParsed.push({ cn: item }));\n\n  // for (let i in myArray) {\n  //   dataParsed.push({\n  //     index: i,\n  //     cn: myArray[i],\n  //     en: myArray2[i],\n  //     en2: myArray3[i],\n  //     py: myArray4[i],\n  //   });\n  // }\n\n  // alert(myArray.length + \" also \" + myArray2.length + \" as \" + myArray3.length);\n\n  function handleChange(newValue) {\n    // console.log(newValue.spli t(\",\"));\n    setTargetWords(removeAllBlanks(newValue.split(\"\\n\")));\n  }\n\n  function removeAllBlanks(arr) {\n    let arr2 = [...arr];\n    for (var i = arr2.length; i--; ) {\n      if (arr2[i] === \"\") arr2.splice(i, 1);\n    }\n    return arr2;\n  }\n\n  function learnedWord(word) {\n    setTargetWords(targetWords.filter((item) => item !== word));\n    const temp = [...learnedWords];\n    temp.push(word);\n    setLearnedWords(temp);\n  }\n\n  const controlMusic = async (e, timeToGo) => {\n    // console.log(e.target.querySelector(\".time\").innerHTML);\n    // console.log(e);\n    e.preventDefault();\n    if (e.target.querySelector(\".time2\")) {\n      // setTimePosition(e.target.querySelector(\".time2\").innerHTML);\n      setTimePosition(timeToGo - 0.5);\n      // console.log(\n      //   \"our text timestamp is \" + e.target.querySelector(\".time\").innerHTML\n      // );\n      setRefreshAudio(refreshAudio + 1);\n      // console.log(refreshAudio + \" refreshAudio has changed\");\n    }\n\n    // const result = await navigator.clipboard.writeText(\n    //   e.target.querySelector(\".time\").innerHTML\n    // );\n    // const url = \"btt://trigger_named/?trigger_name=music_skip\";\n    // window.open(url);\n    // // popup.blur();\n    // window.focus();\n  };\n\n  return (\n    <div>\n      <div className=\"text-first\">\n        <ScrollDemo />\n        <Player\n          // autoPlay\n          setGetTime={setGetTime}\n          seekTo={timePosition}\n          refreshAudio={refreshAudio}\n          loadAudio={loadAudio}\n          // url={`https://raw.githubusercontent.com/overtoo/test/main/ep46.mp3#t=${timePosition}`}\n          url={`https://raw.githubusercontent.com/overtoo/test/main/ep46.mp3`}\n        />\n        {/* <button onClick={loadData}>ep. 47</button> */}\n        <button onClick={umOk}>\n          {displayController.targetSen ? \"show All\" : \"target sentences only\"}\n        </button>\n        <button onClick={umOk2}>\n          {displayController.card ? \"no card\" : \"card\"}\n        </button>\n        <button onClick={selection}>Add Word</button>\n      </div>\n\n      <div className=\"container\">\n        {/* {console.log(data)}\n      {console.log(data[0].tw)}\n      {console.log(targetWords)} */}\n        {/* <div className=\"input-box\"></div> */}\n        <div>\n          <Sentences\n            rawText={rawText}\n            parentLockTime={parentLockTime}\n            getTime={getTime}\n            setWords={setWords}\n            refresh={refresh}\n            words={words}\n            controlMusic={controlMusic}\n            displayController={displayController}\n            cardChange={displayController.card}\n            setLoadAudio={setLoadAudio}\n          />\n        </div>\n\n        <div className=\"input-box\">\n          <Words\n            words={words}\n            setWords={setWords}\n            load=\"target\"\n            promoteTo=\"learned\"\n            color=\"lightpink\"\n          />\n          <Words\n            words={words}\n            setWords={setWords}\n            load=\"learned\"\n            demoteTo=\"target\"\n            promoteTo=\"trash\"\n            color=\"lightblue\"\n          />\n          <Words\n            words={words}\n            setWords={setWords}\n            load=\"trash\"\n            demoteTo=\"learned\"\n            color=\"lightgrey\"\n          />\n          <div>\n            <h3> Add to Anki:</h3>\n            {ankiAdd.map((word, index) => {\n              if (index === ankiAdd.length - 1) {\n                return (\n                  <span className=\"anki-adder\">traditional:\"{word}\" </span>\n                );\n              }\n              return (\n                <span className=\"anki-adder\">traditional:\"{word}\" OR </span>\n              );\n            })}\n\n            <h3> Manually Add:</h3>\n            {manualAdd.map((word) => {\n              return <p>{word}</p>;\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}